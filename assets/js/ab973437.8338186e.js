"use strict";(self.webpackChunkjackmleitch_com_np=self.webpackChunkjackmleitch_com_np||[]).push([[181],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return g}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var c=a.createContext({}),u=function(t){var e=a.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=u(t.components);return a.createElement(c.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},f=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,c=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),f=u(n),g=r,m=f["".concat(c,".").concat(g)]||f[g]||s[g]||i;return n?a.createElement(m,o(o({ref:e},p),{},{components:n})):a.createElement(m,o({ref:e},p))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l.mdxType="string"==typeof t?t:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3386:function(t,e,n){n.r(e),n.d(e,{assets:function(){return p},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return s}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={slug:"Strava-Data-Pipeline",title:"Building a ELT Strava Data Pipline",tags:["Python","AWS","Airflow","Data-Engineering"],authors:"jack"},c=void 0,u={permalink:"/blog/Strava-Data-Pipeline",source:"@site/blog/2022-06-20-StravaDataPipeline.md",title:"Building a ELT Strava Data Pipline",description:"EtLT of my own Strava data using the Strava API, MySQL, Python, S3, Redshift, and Airflow",date:"2022-06-20T00:00:00.000Z",formattedDate:"June 20, 2022",tags:[{label:"Python",permalink:"/blog/tags/python"},{label:"AWS",permalink:"/blog/tags/aws"},{label:"Airflow",permalink:"/blog/tags/airflow"},{label:"Data-Engineering",permalink:"/blog/tags/data-engineering"}],readingTime:10.27,truncated:!0,authors:[{name:"Jack Leitch",title:"Machine Learning Engineer",url:"https://github.com/jackmleitch",imageURL:"https://github.com/jackmleitch.png",key:"jack"}],frontMatter:{slug:"Strava-Data-Pipeline",title:"Building a ELT Strava Data Pipline",tags:["Python","AWS","Airflow","Data-Engineering"],authors:"jack"},nextItem:{title:"Building NLP Powered Applications with Hugging Face Transformers",permalink:"/blog/Essay-Companion"}},p={authorsImageUrls:[void 0]},s=[],f={toc:s};function g(t){var e=t.components,l=(0,r.Z)(t,o);return(0,i.kt)("wrapper",(0,a.Z)({},f,l,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"EtLT of my own Strava data using the Strava API, MySQL, Python, S3, Redshift, and Airflow")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"system_diagram",src:n(6527).Z,width:"1450",height:"718"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"I build an EtLT pipeline to ingest my ",(0,i.kt)("a",{parentName:"strong",href:"https://www.strava.com/athletes/5028644"},"Strava data")," from the Strava API and load it into a ",(0,i.kt)("a",{parentName:"strong",href:"https://aws.amazon.com/redshift/"},"Redshift")," data warehouse. This pipeline is then run once a week using ",(0,i.kt)("a",{parentName:"strong",href:"https://airflow.apache.org"},"Airflow")," to extract any new activity data. The end goal is then to use this data warehouse to build an automatically updating dashboard in Tableau and also to trigger automatic re-training of my ",(0,i.kt)("a",{parentName:"strong",href:"https://github.com/jackmleitch/StravaKudos"},"Strava Kudos Prediction model"),".")))}g.isMDXComponent=!0},6527:function(t,e,n){e.Z=n.p+"assets/images/system_diagram-11c14c74c5c8bf3fa9760c95664ef611.png"}}]);