"use strict";(self.webpackChunkjackmleitch_com_np=self.webpackChunkjackmleitch_com_np||[]).push([[8023],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),g=s(n),m=a,f=g["".concat(l,".").concat(m)]||g[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9235:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],c={slug:"Essay-Companion",title:"Building NLP Powered Applications with Hugging Face Transformers",tags:["NLP","Hugging Face","Chrome Extension","Docker","Python"],authors:"jack"},l=void 0,s={permalink:"/blog/Essay-Companion",source:"@site/blog/2022-06-10-EssayCompanion.md",title:"Building NLP Powered Applications with Hugging Face Transformers",description:"... and deploying on Google Chrome with FastAPI and\xa0Docker",date:"2022-06-10T00:00:00.000Z",formattedDate:"June 10, 2022",tags:[{label:"NLP",permalink:"/blog/tags/nlp"},{label:"Hugging Face",permalink:"/blog/tags/hugging-face"},{label:"Chrome Extension",permalink:"/blog/tags/chrome-extension"},{label:"Docker",permalink:"/blog/tags/docker"},{label:"Python",permalink:"/blog/tags/python"}],readingTime:11.235,truncated:!0,authors:[{name:"Jack Leitch",title:"Machine Learning Engineer",url:"https://github.com/jackmleitch",imageURL:"https://github.com/jackmleitch.png",key:"jack"}],frontMatter:{slug:"Essay-Companion",title:"Building NLP Powered Applications with Hugging Face Transformers",tags:["NLP","Hugging Face","Chrome Extension","Docker","Python"],authors:"jack"},prevItem:{title:"Building a Strava Data EtLT Pipline",permalink:"/blog/Strava-Data-Pipeline"},nextItem:{title:"Building Interpretable Models on Imbalanced Data",permalink:"/blog/Churn-Prediction"}},p={authorsImageUrls:[void 0]},u=[],g={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"... and deploying on Google Chrome with FastAPI and\xa0Docker")),(0,o.kt)("p",null,"I recently finished the fantastic new Natural Language Processing with Transformers book written by a few guys on the Hugging Face team and was inspired to put some of my newfound knowledge to use with a little NLP-based project. While searching for some ideas I came across an ",(0,o.kt)("a",{parentName:"p",href:"https://medium.com/data-science-at-microsoft/developing-microsoft-edge-extensions-powered-by-sota-nlp-models-f3991f18daa4"},"excellent blog post")," by Tezan Sahu in which he built a Microsoft Edge extension to paraphrase text highlighted on your screen. I wanted to take this a step further by:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"optimizing model inference with ",(0,o.kt)("strong",{parentName:"p"},"ONNX runtime")," and ",(0,o.kt)("strong",{parentName:"p"},"quantization"),",")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"include features such as summarization, name entity recognition (NER), and keyword extraction."))))}m.isMDXComponent=!0}}]);